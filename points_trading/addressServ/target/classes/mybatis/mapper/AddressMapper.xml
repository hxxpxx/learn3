<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bank.mapper.AddressMapper">
  <resultMap id="BaseResultMap" type="org.bank.entity.Address">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="is_default" jdbcType="VARCHAR" property="isDefault" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contacts, phone, address, is_default, user_id, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where id = #{id,jdbcType=INTEGER} and deleted=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.bank.entity.Address">
    insert into address (id, contacts, phone, 
      address,is_default, user_id, createtime,
      updatetime)
    values (#{id,jdbcType=INTEGER}, #{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR},#{isDefault,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP},
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.bank.entity.Address">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bank.entity.Address">
    update address
    <set>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>

      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bank.entity.Address">
    update address
    set contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      is_default= #{isDefault,jdbcType=VARCHAR},
      deleted= #{deleted,jdbcType=TINYINT},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="org.bank.entity.Address">
    select <include refid="Base_Column_List"></include>
    from address
    <where>
      deleted=1
      <if test="contacts!=null and contacts!=''">
        AND contacts LIKE concat('%',#{contacts},'%')
      </if>
      <if test="phone!=null and phone!=''">
        AND phone LIKE concat('%',#{phone},'%')
      </if>
      <if test="address!=null and address!=''">
        AND address LIKE concat('%',#{address},'%')
      </if>
      <if test="isDefault!=null and isDefault!='' ">
        AND is_default=#{isDefault}
      </if>
      <if test="userId!=null and userId!='' ">
        AND user_id=#{userId}
      </if>
    </where>
  </select>

</mapper>