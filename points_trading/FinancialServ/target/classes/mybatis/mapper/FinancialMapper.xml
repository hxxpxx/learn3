<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bank.mapper.FinancialMapper">
  <resultMap id="BaseResultMap" type="org.bank.entity.Financial">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="totalstock" jdbcType="INTEGER" property="totalstock" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `describe`, price, totalstock, stock, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from financial
    where id = #{id,jdbcType=VARCHAR} and deleted=1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from financial
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.bank.entity.Financial">
    insert into financial (id, `name`, `describe`, 
      price, totalstock, stock, createtime,
      updatetime)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{totalstock,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.bank.entity.Financial">
    insert into financial
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        totalstock,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalstock != null">
        #{totalstock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bank.entity.Financial">
    update financial
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="totalstock != null">
        totalstock = #{totalstock,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bank.entity.Financial">
    update financial
    set `name` = #{name,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      totalstock = #{totalstock,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="org.bank.entity.Financial">
    select <include refid="Base_Column_List"></include>
    from financial
    <where>
      deleted=1
      <if test="name!=null and name!=''">
        AND name LIKE concat('%',#{name},'%')
      </if>
    </where>
  </select>

  <select id="selectByName" resultMap="BaseResultMap" parameterType="String">
    select <include refid="Base_Column_List"></include>
    from financial
    <where>
      deleted=1
      <if test="_parameter!=null and _parameter!=''">
        AND `name`=#{_parameter}
      </if>
    </where>
  </select>
</mapper>